import tkinter as tk
from tkinter import Frame, Label, Button, messagebox
from GiaoDien_QuanLyNguoiDung import GiaoDienQuanLyNguoiDung
from GiaoDien_QuanLySach import GiaoDienQuanLySach
from GiaoDien_QuanLyThuThu import GiaoDienQuanLyThuThu
from GiaoDien_TimKiemAPI import GiaoDienTimKiemAPI

class GiaoDienChinh(tk.Frame):
    def __init__(self, master, user_login):
        super().__init__(master)
        self.master = master
        self.user_login = user_login
        self.master.title("Qu·∫£n l√Ω th∆∞ vi·ªán")
        self.master.geometry("1200x700")
        self.pack(fill="both", expand=True)
        
        # Sidebar tr√°i (c·ªë ƒë·ªãnh)
        self.sidebar = Frame(self, width=200, bg="#2c3e50")
        self.sidebar.pack(side="left", fill="y")
        self.sidebar.pack_propagate(False)
        
        # Label ch√†o m·ª´ng
        welcome_label = Label(
            self.sidebar, 
            text=f"Ch√†o {self.user_login.username}", 
            font=("Arial", 12, "bold"),
            bg="#2c3e50",
            fg="white",
            pady=20
        )
        welcome_label.pack(fill="x", padx=10, pady=(20, 10))

        # Menu buttons
        self.create_menu_buttons()
        
        # N√∫t ƒëƒÉng xu·∫•t ·ªü cu·ªëi sidebar
        self.create_logout_button()
        
        # Khung ch√≠nh (m√†u tr·∫Øng)
        self.khungChinh = Frame(self, bg="white", relief="ridge", bd=2)
        self.khungChinh.pack(side="right", fill="both", expand=True, padx=5, pady=5)
        
        # Hi·ªÉn th·ªã welcome message ban ƒë·∫ßu
        self.hien_thi_welcome()

    def create_menu_buttons(self):
        """T·∫°o c√°c n√∫t menu"""
        # N√∫t qu·∫£n l√Ω s√°ch (cho t·∫•t c·∫£ user)
        btn_sach = Button(
            self.sidebar,
            text="üìö Qu·∫£n l√Ω s√°ch",
            command=self.mo_quan_ly_sach,
            bg="#3498db",
            fg="white",
            font=("Arial", 10),
            relief="flat",
            pady=10
        )
        btn_sach.pack(fill="x", padx=10, pady=5)
        
        # N√∫t t√¨m ki·∫øm API (cho t·∫•t c·∫£ user)
        btn_api = Button(
            self.sidebar,
            text="üîç T√¨m ki·∫øm API",
            command=self.mo_tim_kiem_api,
            bg="#16a085",
            fg="white",
            font=("Arial", 10),
            relief="flat",
            pady=10
        )
        btn_api.pack(fill="x", padx=10, pady=2)
        
        # N√∫t m∆∞·ª£n/tr·∫£ s√°ch
        btn_muon_tra = Button(
            self.sidebar,
            text="üìñ M∆∞·ª£n/Tr·∫£ s√°ch",
            command=self.mo_muon_tra,
            bg="#9b59b6",
            fg="white",
            font=("Arial", 10),
            relief="flat",
            pady=10
        )
        btn_muon_tra.pack(fill="x", padx=10, pady=2)
        
        # N√∫t qu·∫£n l√Ω user (ch·ªâ admin)
        if self.user_login.permission:
            btn_user = Button(
                self.sidebar,
                text="üë§ Qu·∫£n l√Ω User",
                command=self.mo_quan_ly_user,
                bg="#e74c3c",
                fg="white",
                font=("Arial", 10),
                relief="flat",
                pady=10
            )
            btn_user.pack(fill="x", padx=10, pady=2)
            
            # N√∫t qu·∫£n l√Ω th·ªß th∆∞ (ch·ªâ admin)
            btn_thu_thu = Button(
                self.sidebar,
                text="üë®‚Äçüíº Qu·∫£n l√Ω Th·ªß Th∆∞",
                command=self.mo_quan_ly_thu_thu,
                bg="#e67e22",
                fg="white",
                font=("Arial", 10),
                relief="flat",
                pady=10
            )
            btn_thu_thu.pack(fill="x", padx=10, pady=2)

    def create_logout_button(self):
        """T·∫°o n√∫t ƒëƒÉng xu·∫•t ·ªü cu·ªëi sidebar"""
        # Frame ƒë·ªÉ ƒë·∫©y n√∫t ƒëƒÉng xu·∫•t xu·ªëng cu·ªëi
        spacer_frame = Frame(self.sidebar, bg="#2c3e50")
        spacer_frame.pack(fill="both", expand=True)
        
        # Separator line
        separator = Frame(self.sidebar, height=2, bg="#34495e")
        separator.pack(fill="x", padx=10, pady=10)
        
        # N√∫t ƒëƒÉng xu·∫•t
        btn_logout = Button(
            self.sidebar,
            text="üö™ ƒêƒÉng xu·∫•t",
            command=self.dang_xuat,
            bg="#c0392b",
            fg="white",
            font=("Arial", 10, "bold"),
            relief="flat",
            pady=12,
            cursor="hand2"
        )
        btn_logout.pack(fill="x", padx=10, pady=(0, 20))
        
        # Hi·ªáu ·ª©ng hover cho n√∫t ƒëƒÉng xu·∫•t
        def on_enter(event):
            btn_logout.configure(bg="#a93226")
        
        def on_leave(event):
            btn_logout.configure(bg="#c0392b")
        
        btn_logout.bind("<Enter>", on_enter)
        btn_logout.bind("<Leave>", on_leave)

    def dang_xuat(self):
        """X·ª≠ l√Ω ƒëƒÉng xu·∫•t v√† quay v·ªÅ m√†n h√¨nh ƒëƒÉng nh·∫≠p"""
        # Hi·ªÉn th·ªã h·ªôp tho·∫°i x√°c nh·∫≠n
        if messagebox.askyesno("X√°c nh·∫≠n ƒëƒÉng xu·∫•t", 
                              f"B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t t√†i kho·∫£n '{self.user_login.username}'?"):
            try:
                # X√≥a giao di·ªán hi·ªán t·∫°i
                self.destroy()
                
                # ƒê·∫∑t l·∫°i k√≠ch th∆∞·ªõc c·ª≠a s·ªï cho m√†n h√¨nh ƒëƒÉng nh·∫≠p
                self.master.geometry("400x400")
                
                # CƒÉn gi·ªØa c·ª≠a s·ªï
                screen_width = self.master.winfo_screenwidth()
                screen_height = self.master.winfo_screenheight()
                x = (screen_width - 400) // 2
                y = (screen_height - 400) // 2
                self.master.geometry(f"400x400+{x}+{y}")
                
                # Import v√† t·∫°o l·∫°i giao di·ªán ƒëƒÉng nh·∫≠p
                from GiaoDien_DangNhap import GiaoDienDangNhap
                
                # T·∫°o h√†m ki·ªÉm tra quy·ªÅn (gi·∫£ s·ª≠ c√≥ s·∫µn)
                def kiem_tra_quyen(username, password, role):
                    # Import c√°c h√†m c·∫ßn thi·∫øt ƒë·ªÉ ki·ªÉm tra ƒëƒÉng nh·∫≠p
                    from User_QuanLy import get_all_users
                    users = get_all_users()
                    for user in users:
                        if (user.username == username and 
                            user.password == password and 
                            user.role == role):
                            return user
                    return None
                
                # T·∫°o giao di·ªán ƒëƒÉng nh·∫≠p m·ªõi
                GiaoDienDangNhap(self.master, kiem_tra_quyen)
                
                # Hi·ªÉn th·ªã th√¥ng b√°o ƒëƒÉng xu·∫•t th√†nh c√¥ng
                messagebox.showinfo("ƒêƒÉng xu·∫•t th√†nh c√¥ng", 
                                  "B·∫°n ƒë√£ ƒëƒÉng xu·∫•t th√†nh c√¥ng!\nVui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.")
                
            except Exception as e:
                messagebox.showerror("L·ªói", f"C√≥ l·ªói x·∫£y ra khi ƒëƒÉng xu·∫•t: {str(e)}")

    def hien_thi_welcome(self):
        """Hi·ªÉn th·ªã th√¥ng ƒëi·ªáp ch√†o m·ª´ng"""
        self.xoa_noi_dung_chinh()
        welcome_label = Label(
            self.khungChinh,
            text="üèõÔ∏è Ch√†o m·ª´ng ƒë·∫øn v·ªõi H·ªá th·ªëng Qu·∫£n l√Ω Th∆∞ vi·ªán",
            font=("Arial", 18, "bold"),
            bg="white",
            fg="#2c3e50",
            pady=50
        )
        welcome_label.pack()
        
        info_label = Label(
            self.khungChinh,
            text=f"ƒêƒÉng nh·∫≠p v·ªõi quy·ªÅn: {self.user_login.role}",
            font=("Arial", 12),
            bg="white",
            fg="#7f8c8d"
        )
        info_label.pack()

    def xoa_noi_dung_chinh(self):
        """X√≥a t·∫•t c·∫£ widget trong khung ch√≠nh"""
        for widget in self.khungChinh.winfo_children():
            widget.destroy()

    def mo_quan_ly_sach(self):
        """M·ªü giao di·ªán qu·∫£n l√Ω s√°ch trong khung ch√≠nh"""
        self.xoa_noi_dung_chinh()
        
        # T·∫°o giao di·ªán qu·∫£n l√Ω s√°ch trong khung ch√≠nh
        GiaoDienQuanLySach(self.khungChinh)

    def mo_tim_kiem_api(self):
        """M·ªü giao di·ªán t√¨m ki·∫øm s√°ch qua API"""
        self.xoa_noi_dung_chinh()
        
        # T·∫°o giao di·ªán t√¨m ki·∫øm API trong khung ch√≠nh
        GiaoDienTimKiemAPI(self.khungChinh)

    def mo_quan_ly_user(self):
        """M·ªü c·ª≠a s·ªï qu·∫£n l√Ω ng∆∞·ªùi d√πng"""
        win = tk.Toplevel(self.master)
        win.geometry("500x450")
        win.title("Qu·∫£n l√Ω ng∆∞·ªùi d√πng")
        win.configure(bg="white")
        win.transient(self.master)
        win.grab_set()
        GiaoDienQuanLyNguoiDung(win)

    def mo_quan_ly_thu_thu(self):
        """M·ªü giao di·ªán qu·∫£n l√Ω th·ªß th∆∞ trong khung ch√≠nh"""
        self.xoa_noi_dung_chinh()
        
        # T·∫°o giao di·ªán qu·∫£n l√Ω th·ªß th∆∞ trong khung ch√≠nh
        GiaoDienQuanLyThuThu(self.khungChinh)
        
    def mo_muon_tra(self):
        """M·ªü giao di·ªán m∆∞·ª£n/tr·∫£ s√°ch"""
        self.xoa_noi_dung_chinh()
    
        # Import v√† t·∫°o giao di·ªán m∆∞·ª£n/tr·∫£ s√°ch
        from GiaoDien_MuonTra import GiaoDienMuonTra
        GiaoDienMuonTra(self.khungChinh)